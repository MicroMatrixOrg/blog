<template>
  <!-- 已收到 -->
  <div>
    <div class="main-box">
      <div class="main-contents">
      <transition name="fade"></transition>
        <div class="main-contents" v-if="manageFlag == 1">
          <header>
            <Button class="add-btn" @click="changeView()">创建讨论</Button>
            <Button v-if="typeof lessonsId != 'undefined' || typeof releaseId != 'undefined'" class="add-btn" @click="addBeike()">绑定课程</Button> 
          </header>
          <footer>
            <manage-miss :releaseId="releaseId" :lessonsId='lessonsId' @addToBeike="getChose" @getKenTang="getKentang"></manage-miss>
          </footer>
        </div>
      
      <transition name="fade"></transition>
      <!-- 添加 -->
        <div class="other-contents" v-if="manageFlag == 2">
          <header style="display: flex;justify-content: space-between;">
            <div>
              <span style="font-size:18px;">讨论管理</span> > <span style="font-size:16px;">创建讨论</span>
            </div>
            <!-- <div  @click="goback()" style="width: 55px;height: 30px; border: 1px solid #eee;text-align: center;border-radius: 20px;">
              <i style="vertical-align: sub;" class='fa fa-reply'></i>
            </div> -->
            <Button @click="goback()" type="primary" style=" display: inline-block;float:right;margin: 12px;">返回</Button>
          </header>
          <footer>
            <add-disc @on-cancle = "onCancle"></add-disc>
          </footer>
        </div>
        <Modal v-model="relemodal" width="825"  :mask-closable="false">
            <p slot="header" style="text-align:left">
                <span style="font-size:18px;">发布讨论</span>
            </p>
            <div style="height:435px;">
              <div  class="miss-li-from">
                <!-- <div style="text-align:left;margin-bottom:45px;">
                  <span class="miss-title">提交格式</span>
                  <div class="miss-type">
                    <Select v-model="format" style="width:504px;margin-left:59px;">
                        <Option v-for="item in formatList" :value="item.value" :key="item.value">{{ item.label }}</Option>
                    </Select>
                  </div>
                  <p style="text-align:right;color:#84B6F9;width: calc(100% - 117px);">说明:要求学生提交本次任务的内容格式</p>
                </div> -->
                <div style="text-align:left;">
                  <span class="miss-title">发布对象</span>
                  <div class="miss-content">
                      <RadioGroup v-model="releObject">
                        <Radio label="班级" :disabled = true></Radio>
                        <Radio label="课堂"></Radio>
                      </RadioGroup>

                  </div>
                </div>
                <div class = "course-class" style="display:block;margin-bottom:45px;" v-show="releObject=='课堂'">
                  <span></span>
                  <Select v-model="ketang" :disabled = true style="width:370px;" v-if="type == undefined">
                      <Option v-for="item in releaseKTList" :value="item.id" :key="item.id">{{  item.name }}</Option>
                  </Select>
                  <p v-else>
                    课堂名称:{{bkfbName}}
                  </p>
                </div>
                 
                <div style="text-align:left;margin-bottom:45px;">
                  <span class="miss-title">发布时间</span>
                  <div class="miss-type" style="padding-left: 59px;">
                     <span v-if="typeof type == undefined">{{tStartDate}}</span>
                     <span v-else>{{bkfbStartTime}}</span>
                  </div>
                </div>
                <!-- <div style="text-align:left;margin-bottom:45px;padding-left: 49px;">
                  <span class="other-miss-title">截至时间</span>
                  <div class="miss-type" style="margin-left: 59px;">
                    <DatePicker :value="tEndDate" @on-change="getEndDate" type="datetime" placeholder="" format="yyyy-MM-dd HH:mm" style="width: 370px"></DatePicker>
                  </div>
                </div> -->
                 <!-- <div class = "type-class" style="display:block;">
                    <span></span>
                    <RadioGroup v-model="submitType">
                      <Radio label="1">个人</Radio>
                      <Radio label="2">小组</Radio>
                    </RadioGroup>
                 </div> -->
              </div>

            </div>
            <div slot="footer" style="text-align:center">
                  <Button type="primary" @click="releMission()" :disabled="souyeFlag">确认</Button>
                  <Button @click="cancle()" >取消</Button>   
            </div>
        </Modal>

      </div>
    </div>
  </div>
</template>

<script>
import addDisc from "@/components/discussionManager/addDisc.vue";
import manageMiss from "@/components/discussionManager/manageDisc.vue";
import editModal from "@/components/discussionManager/editDiscussion.vue";

export default {
  components: {
    addDisc,
    manageMiss,
    editModal
  },
  data() {
    const _this = this;
    return {
      tapFlag: "",
      manageFlag: 1,
      lessonsId: _this.$route.query.lessonId,
      releaseId: _this.$route.query.id,
      type: _this.$route.query.type,
      addToBeike: [],
      releObject: "课堂",
      formatList: [],
      format: 8,
      ketang: "",
      tStartDate: "",
      tEndDate: "",
      relemodal: false,
      releaseKTList: [],

      souyeFlag: false,

      bkfbName: _this.$route.query.name, //发布过来的课堂名字
      bkfbStartTime: _this.$route.query.publishDate //发布过来的开始时间
    };
  },
  created() {
    // var url='http://basedebug.bestsch.com/BschQuestionnaire/api/GetUserInfo';
    // this.$api.get(url, null, resp => {
    //   console.log(233);
    // });
  },
  mounted() {
    console.log(this.bkfbStartTime);
    // this.getMissionCommitType();
  },
  methods: {
    getEndDate(value) {
      const _this = this;
      _this.tEndDate = value;
    },
    getChose(val) {
      const _this = this;
      // console.log("首页的", val);
      _this.addToBeike = val;
    },
    getKentang(val) {
      //首页跳过来获取的课堂信息
      console.log("可叹", val);
      this.ketang = val.id;
      this.tStartDate = val.onStartDate;
      this.releaseKTList = [];
      this.releaseKTList.push(val);
    },
    addBeike() {
      const _this = this;
      console.log("绑定课程", _this.addToBeike);
      if (_this.addToBeike.length > 0) {
        if (typeof _this.lessonsId != "undefined") {
          let mids = [];
          for (let i = 0; i < _this.addToBeike.length; i++) {
            mids.push(_this.addToBeike[i].id);
          }
          mids = mids.join(",");
          console.log(mids);
          // _this.$api.post(
          //   APIConfig.Discussion.AddLessonDiscussion,
          //   {
          //     id: _this.lessonsId,
          //     mlIds: mids
          //   },
          //   resp => {
          //     if (resp.code == 0) {
          //       window.parent.location.href =
          //         "http://learn.bestsch.com/#/beike/editLesson?id=" +
          //         _this.lessonsId;
          //     } else {
          //       _this.$Message.info(resp.msg);
          //     }
          //   }
          // );
        } else if (
          typeof _this.releaseId != "undefined" &&
          typeof _this.type != "undefined"
        ) {
          _this.relemodal = true;
          // window.parent.location.href =
          //   "http://learn.bestsch.com/#/beike/editPublish?id=" +
          //   _this.releaseId;
        } else if (typeof _this.releaseId != "undefined") {
          _this.relemodal = true;
        }
      } else {
        _this.$Message.info("请选择要绑定的任务");
      }
    },
    gradeToChar(id) {
      if (id == 1) {
        return "一年";
      } else if (id == 2) {
        return "二年";
      } else if (id == 3) {
        return "三年";
      } else if (id == 4) {
        return "四年";
      } else if (id == 5) {
        return "五年";
      } else if (id == 6) {
        return "六年";
      } else if (id == 7) {
        return "初一";
      } else if (id == 8) {
        return "初二";
      } else if (id == 9) {
        return "初三";
      } else if (id == 10) {
        return "高一";
      } else if (id == 11) {
        return "高二";
      } else if (id == 12) {
        return "高三";
      }
    },
    releMissionToBKFb() {
      const _this = this;
      _this.souyeFlag = true;
      console.log();
      for (let i = 0; i < _this.addToBeike.length; i++) {
        let params = {
          dlId: _this.addToBeike[i].id,
          // classInfos: JSON.stringify(classInfo),
          courseId: +_this.$route.query.id,
          courseName: _this.$route.query.name,
          classIds: _this.$route.query.classIds,
          classNames: _this.$route.query.classNames,
          publishDate: _this.$route.query.publishDate
        };
        console.log(params);
        _this.$api.post(
          APIConfig.Discussion.AddNewPubDiscussion,
          params,
          resp => {
            if (resp.code == 0) {
              _this.$Message.info("发布成功");
              if (_this.type == "publish") {
                window.parent.location.href =
                  "http://learn.bestsch.com/#/beike/editPublish?id=" +
                  _this.releaseId;
              } else if (_this.type == "homepage") {
                console.log("我是首页过来的");
              }
            } else {
              _this.$Message.info("发布失败");
            }
            _this.souyeFlag = false;
            _this.relemodal = false;
          }
        );
      }
    },
    releMission() {
      const _this = this;
      if (_this.type == undefined) {
        _this.releMissionToBK();
      } else {
        _this.releMissionToBKFb();
      }
    },
    releMissionToBK() {
      const _this = this;
      _this.souyeFlag = true;
      console.log(_this.type);
      // for (let i = 0; i < _this.addToBeike.length; i++) {
      //   let params = {
      //     mlId: _this.addToBeike[i].id,
      //     // classInfos: JSON.stringify(classInfo),
      //     courseId: +_this.ketang,
      //     courseName: _this.releaseKTList[0].name,
      //     classIds: _this.releaseKTList[0].pubObjId,
      //     classNames: _this.releaseKTList[0].pubObjName,
      //     publishDate: _this.tStartDate
      //   };
      //   _this.$api.post(APIConfig.Mission.addNewPubMission, params, resp => {
      //     if (resp.code == 0) {
      //       _this.$Message.info("发布成功");
      //     } else {
      //       _this.$Message.info("发布失败");
      //     }
      //     _this.souyeFlag = false;
      //     _this.relemodal = false;
      //   });
      // }
    },
    cancle() {
      const _this = this;
      _this.relemodal = false;
      _this.format = 8;
      _this.tEndDate = "";
    },
    changeView() {
      this.manageFlag = 2;
    },
    onCancle(val) {
      this.manageFlag = val;
    },
    goback() {
      this.manageFlag = true;
    },

    getMissionCommitType() {
      const _this = this;
      _this.$api.get(
        APIConfig.Mission.GetMissionCommitType,
        {},
        function(resp) {
          if (resp.code == 0) {
            _this.formatList = resp.data;
          } else {
            _this.$Message.info(resp.msg);
          }
        },
        error => {
          _this.$Message.info("获取类型失败");
        }
      );
    }
  }
};
</script>
<style lang="scss" scoped>
.main-contents {
  min-width: 1276px;
  overflow: auto;
}
.main-contents > header {
  padding: 20px;
  border-bottom: 1px solid #eee;
  .add-btn {
    color: #fff;
    background-color: #51aafe;
    border-color: #51aafe;
  }
}
.other-contents {
  min-width: 1276px;
  overflow: auto;
}
.other-contents > header {
  padding: 20px;
  border-bottom: 1px solid #eee;
  .add-btn {
    color: #fff;
    background-color: #51aafe;
    border-color: #51aafe;
  }
}

.miss-li-from {
  // display: flex;
  // align-items: Center;
  height: calc(100%);
  padding-top: calc(6%);
}
.other-miss-title {
  width: 136px;
  text-align: left;
  font-size: 16px;
}
.other-miss-title:first {
  padding: 5px 0;
}
.miss-title {
  width: 136px;
  text-align: left;
  font-size: 16px;
}
.miss-title:first {
  padding: 5px 0;
}
.miss-title::before {
  content: "*";
  color: #ed4014;
  margin: 0 20px;
  vertical-align: sub;
}
.miss-content {
  display: inline-block;
  width: calc(100% - 435px);
}
.miss-content > div {
  display: flex;
  justify-content: space-around;
}
.grade-class {
  margin-bottom: 45px;
  div {
    // display: inline-block;
    padding-left: 179px;
  }
}
.grade-class > div:first-child {
  padding-left: 179px;
}
.course-class {
  padding-left: 179px;
  margin-top: 20px;
  div {
    display: inline-block;
  }
}
.course-class > span:before {
  content: "*";
  color: #fff;
  margin: 0 20px;
  vertical-align: sub;
}

.type-class {
  padding-left: 260px;
  margin-top: 20px;
}
.type-class > span:before {
  content: "*";
  color: #ed4014;
  margin: 0 20px;
  vertical-align: sub;
}

.miss-type {
  display: inline-block;
  width: calc(100% - 136px);
}
</style>

