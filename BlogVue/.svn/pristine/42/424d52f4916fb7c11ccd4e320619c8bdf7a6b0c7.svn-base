import Vue from 'vue'
import App from './App'
import router from './router'
Vue.prototype.routerCfg = router;

//v4.0版本的iview
import ViewUI from 'view-design';
// import style
import 'view-design/dist/styles/iview.css';
Vue.use(ViewUI);
// Vue.config.productionTip = false;

//ie兼容处理
import 'babel-polyfill'

// import { conf } from '../static/js/conf.js'
// Vue.prototype.$conf = conf;
// window.conf = conf;

// 引用API文件
import api from './api/index.js'
// 将API方法绑定到全局
Vue.prototype.$api = api;

// 引用工具文件
import utils from './utils/index.js'
import APIConfig from './utils/config.js'
// 将工具方法绑定到全局
Vue.prototype.$utils = utils;


//加载vuex
import store from './store'
Vue.prototype.$store = store;

// import iView from 'iview';
// import 'iview/dist/styles/iview.css';
// Vue.use(iView);

//引入ElemeentUI
import ElementUI from 'element-ui';
import 'element-ui/lib/theme-chalk/index.css';
Vue.use(ElementUI);





import Viewer from 'v-viewer'
import 'viewerjs/dist/viewer.css'
Vue.use(Viewer)
Viewer.setDefaults({
  Options: {
    'inline': true,
    'button': true,
    'navbar': true,
    'title': true,
    'toolbar': true,
    'tooltip': true,
    'movable': true,
    'zoomable': true,
    'rotatable': true,
    'scalable': true,
    'transition': true,
    'fullscreen': true,
    'keyboard': true,
    'url': 'data-source'
  }
})



import echarts from 'echarts'
Vue.prototype.$echarts = echarts


//引入图标库
import "../static/assets/style/font.css"
import "../static/assets/style/style.css"


import '../static/style/style.scss';


//第一次路由跳转验证
let isLoad = true;
router.beforeEach((to, from, next) => {
  // const _this=this;
  // let pathArry=store.state.lisPathSys.get("modId");
  // if(!pathArry){next();return; }
  // let isAuth=pathArry.indexOf(to.meta.modId) == -1 && to.meta.modId !=0;
  let path = '/discussion' + to.fullPath; //zy——后期的模块名
  window.parent.postMessage({
    path
  }, '*');
  next();
})

/* eslint-disable no-new */
Vue.config.productionTip = false;
var app = new Vue({
  el: '#app',
  router,
  store, //使用vuex  
  template: '<App/>',
  components: {
    App
  },
  created() {
    window.APIConfig = APIConfig.Init(window.conf.baseUrl, window.conf.fileUrl);
    // window.APIConfig=APIConfig.Init('','');
  },
})
